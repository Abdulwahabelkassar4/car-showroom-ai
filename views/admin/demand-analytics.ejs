<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Demand Analytics</title>
  <link rel="stylesheet" href="/css/admin_theme.css">
  <link rel="stylesheet" href="/css/ridex_dark_theme.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="admin-body">
  <%- include('../partials/adminHeader') %>
  <main class="analytics-panel">
<div class="analytics-header">
  <h1 class="analytics-title">Demand Prediction Analytics</h1>
  <form method="GET" action="/admin/demand-analytics" class="analytics-filter">
    <label>From:
          <input type="date" name="start_date" value="<%= query.start_date || '' %>">
        </label>
        <label>To:
          <input type="date" name="end_date" value="<%= query.end_date || '' %>">
        </label>
        <button type="submit" class="btn">Apply</button>
      </form>
</div>

    <h1 class="analytics-title">ðŸ“Š Demand Model Analytics</h1>

    <section class="analytics-section">
      <h2 class="analytics-section-title">Prediction Distribution</h2>
      <canvas id="distChart" width="400" height="300"
        data-dist='<%- JSON.stringify(distRows) %>'>
      </canvas>
    </section>

    <section class="analytics-section">
      <h2 class="analytics-section-title">Company-wise Predictions</h2>
      <canvas id="companyChart" width="600" height="300"
        data-comp='<%- JSON.stringify(compRows) %>'>
      </canvas>
    </section>

    <section class="analytics-section">
      <h2 class="analytics-section-title">Predictions Over Time</h2>
      <canvas id="trendChart" width="600" height="300"
        data-time='<%- JSON.stringify(timeRows) %>'>
      </canvas>
    </section>
  </main>

  <script>
    // 1. Distribution Pie Chart
    (function() {
      const ctx = document.getElementById('distChart').getContext('2d');
      const distData = JSON.parse(ctx.canvas.dataset.dist);
      const labels = distData.map(r => r.result);
      const values = distData.map(r => r.count);
      new Chart(ctx, {
        type: 'pie',
        data: { labels, datasets: [{ data: values, backgroundColor: ['#FFD700','#FF8C00','#ADFF2F'] }] },
        options: { plugins: { legend: { labels: { color: 'white' } } } }
      });
    })();

    // 2. Company-wise Stacked Bar Chart
    (function() {
      const ctx = document.getElementById('companyChart').getContext('2d');
      const compData = JSON.parse(ctx.canvas.dataset.comp);

      // unique companies & results
      const companies = [...new Set(compData.map(r => r.company))];
      const results   = [...new Set(compData.map(r => r.result))];

      // build dataset for each result class
      const datasets = results.map((res, i) => ({
        label: res,
        data: companies.map(c => {
          const row = compData.find(r => r.company === c && r.result === res);
          return row ? row.count : 0;
        }),
        backgroundColor: `hsl(${i * 60}, 70%, 60%)`
      }));

      new Chart(ctx, {
        type: 'bar',
        data: { labels: companies, datasets },
        options: {
          plugins: { legend: { labels: { color: 'white' } } },
          scales: {
            x: { stacked: true, ticks: { color: 'white' }, grid: { color: '#444' } },
            y: { stacked: true, beginAtZero: true, ticks: { color: 'white' }, grid: { color: '#444' } }
          }
        }
      });
    })();

    // 3. Time-series Line Chart
    (function() {
      const ctx = document.getElementById('trendChart').getContext('2d');
      const timeData = JSON.parse(ctx.canvas.dataset.time);

      // unique dates & result classes
      const dates   = [...new Set(timeData.map(r => r.date))];
      const results = [...new Set(timeData.map(r => r.result))];

      const datasets = results.map((res, i) => ({
        label: res,
        data: dates.map(d => {
          const row = timeData.find(r => r.date === d && r.result === res);
          return row ? row.count : 0;
        }),
        borderColor: `hsl(${i * 60}, 70%, 60%)`,
        backgroundColor: `hsla(${i * 60}, 70%, 60%, 0.2)`,
        tension: 0.3,
        fill: false
      }));

      new Chart(ctx, {
        type: 'line',
        data: { labels: dates, datasets },
        options: {
          plugins: { legend: { labels: { color: 'white' } } },
          scales: {
            x: { ticks: { color: 'white' }, grid: { color: '#444' } },
            y: { beginAtZero: true, ticks: { color: 'white' }, grid: { color: '#444' } }
          }
        }
      });
    })();
  </script>
</body>
</html>
